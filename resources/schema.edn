;; tasks
[{:db/doc "Task number"
  :db/ident :task/number
  :db/valueType :db.type/long
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}
 {:db/doc "Task description"
  :db/ident :task/description
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}
 {:db/id #db/id[:db.part/user]
  :db/ident :create-task
  :db/fn #db/fn {:lang "clojure"
                 :params [db desc tempid]
                 :code (->>
                         (d/q '[:find (max ?n)
                                :where [_ :task/number ?n]] db)
                         first
                         (map #(hash-map :db/id tempid
                                         :task/number (inc %)
                                         :task/description desc
					 :task/status :task.status/opened)))}}
 {:db/doc "Task status"
  :db/ident :task/status
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}

;; statuses
 {:db/ident :task.status/opened
  :db/id #db/id[:db.part/user]}
 {:db/ident :task.status/active
  :db/id #db/id[:db.part/user]}
 {:db/ident :task.status/cancelled
  :db/id #db/id[:db.part/user]}
 {:db/ident :task.status/closed
  :db/id #db/id[:db.part/user]}

;; comments
 {:db/doc "Comments"
  :db/ident :comments
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/isComponent true
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}
 {:db/doc "Comment body"
  :db/ident :comment/text
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/id #db/id[:db.part/db]
  :db.install/_attribute :db.part/db}]
